{
  "compilerOptions": {
    /* 基本オプション */
    "target": "es5",                           /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "es2015",                      /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "outDir": "./dist",                         /* ディレクトリへ出力構造をリダイレクトします。 */

    /* 詳細オプション */
    "locale": "ja",                            /* ユーザーにメッセージを表示するときに使用するロケール (例: 'en-us') */
    "forceConsistentCasingInFileNames": true,  /* 同じファイルへの大文字小文字の異なる参照を許可しない。 */

    /* Strict 型チェック オプション */
    "strict": true,                            /* 厳密な型チェックのオプションをすべて有効にします。 */

    /* 追加のチェック */
    "noUnusedLocals": true,                 /* 使用されていないローカルに関するエラーを報告します。 */
    "noUnusedParameters": true,             /* 使用されていないパラメーターに関するエラーを報告します。 */
    "noImplicitReturns": true,              /* 関数の一部のコード パスが値を返さない場合にエラーを報告します。 */
    "noFallthroughCasesInSwitch": true,     /* switch ステートメントに case のフォールスルーがある場合にエラーを報告します。 */

    /* モジュール解決のオプション */
    "moduleResolution": "node",             /* モジュールの解決方法を指定します: 'node' (Node.js) または 'classic' (TypeScript pre-1.6)。 */
    "esModuleInterop": true                    /* すべてのインポートの名前空間オブジェクトを作成して、CommonJS と ES モジュール間の生成の相互運用性を有効にします。'allowSyntheticDefaultImports' を暗黙のうちに表します。 */
  }
}
